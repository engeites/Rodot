from sqlalchemy.orm import sessionmaker
from typing import List
from .models import ParentingTip
from .database import engine

Session = sessionmaker(bind=engine)

def create_tip(age_in_months: int, tip_text: str) -> ParentingTip:
    session = Session()
    tip = ParentingTip(age_in_months=age_in_months, tip_text=tip_text)
    session.add(tip)
    session.commit()
    session.refresh(tip)
    session.close()
    return tip

def get_tip_by_id(tip_id: int) -> ParentingTip:
    session = Session()
    tip = session.query(ParentingTip).filter(ParentingTip.id == tip_id).first()
    session.close()
    return tip

def get_all_tips() -> List[ParentingTip]:
    session = Session()
    tips = session.query(ParentingTip).all()
    session.close()
    return tips

def update_tip(tip_id: int, age_in_months: int, tip_text: str) -> ParentingTip:
    session = Session()
    tip = session.query(ParentingTip).filter(ParentingTip.id == tip_id).first()
    tip.age_in_months = age_in_months
    tip.tip_text = tip_text
    session.commit()
    session.refresh(tip)
    session.close()
    return tip

def delete_tip(tip_id: int) -> None:
    session = Session()
    tip = session.query(ParentingTip).filter(ParentingTip.id == tip_id).first()
    session.delete(tip)
    session.commit()
    session.close()
